apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: mvn-build
spec:
  workspaces:
    - name: source
  steps:
    - name: build-sources
      image: maven:3.8.5-openjdk-17
      workingDir: "$(workspaces.source.path)"
      command:
        - /usr/bin/mvn
      args:
        - clean
        - package
---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: sonar-scan
spec:
  params:
    - name: app-name
      default: "default"
    - default: quay.io/ibmgaragecloud/sonarsource-sonar-scanner-cli
      name: sonarqube-cli
    - default: target
      name: sonarqube-java-bin-path
    - default: 'false'
      name: gate-wait
    - default: '300'
      name: gate-wait-timeout
  workspaces:
    - name: source
  steps:
    - name: sonar-scan
      image: $(params.sonarqube-cli)
      env:
        - name: SONAR_USER_HOME
          value: "$(workspaces.source.path)"
        - name: SONARQUBE_URL
          valueFrom:
            secretKeyRef:
              key: SONARQUBE_URL
              name: sonar-secret
              optional: true
        - name: SONARQUBE_TOKEN
          valueFrom:
            secretKeyRef:
              key: SONARQUBE_TOKEN
              name: sonar-secret
              optional: true
      resources: {}
      script: |
        APP_NAME=$(params.app-name)
        SONARQUBE_JAVA_BINARIES_PATH="$(params.sonarqube-java-bin-path)"
        if ! command -v sonar-scanner &> /dev/null
        then
            echo "Skipping SonarQube step, no task defined"
            exit 0
        fi
        if [ -n "${SONARQUBE_URL}" ]; then
          sonar-scanner \
          -Dsonar.login=${SONARQUBE_TOKEN} \
          -Dsonar.host.url=${SONARQUBE_URL} \
          -Dsonar.projectKey=${APP_NAME} \
          -Dsonar.qualitygate.wait=$(params.gate-wait) \
          -Dsonar.qualitygate.timeout=$(params.gate-wait-timeout) \
          -Dsonar.java.binaries=${SONARQUBE_JAVA_BINARIES_PATH}
        else
            echo "Skipping Sonar Qube step for now but include"
        fi
      workingDir: "$(workspaces.source.path)"
---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: mvn-get-version
spec:
  workspaces:
    - name: source
  params:
    - name: MAVEN_IMAGE
      type: string
      description: Maven base image
      default: gcr.io/cloud-builders/mvn@sha256:57523fc43394d6d9d2414ee8d1c85ed7a13460cbb268c3cd16d28cfb3859e641
    - name: CONTEXT_DIR
      type: string
      description: >-
        The context directory within the repository for sources on
        which we want to execute maven goals.
      default: "."
  results:
    - description: Project version read from pom.xml
      name: version
  steps:
    - name: mvn-command
      image: $(params.MAVEN_IMAGE)
      workingDir: $(workspaces.source.path)/$(params.CONTEXT_DIR)
      script: |
        #!/usr/bin/env bash
        VERSION=$(/usr/bin/mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
        echo -n $VERSION | tee $(results.version.path)
